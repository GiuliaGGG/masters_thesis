)
path.plot(synth.res = synth.out,
dataprep.res = dataprep.out,
tr.intake = NA,
Ylab = "real per-capita GDP (1986 USD, thousand)",
Xlab = "year",
Ylim = c(0,12),
Legend = c("Catalonia country","synthetic Catalonia"),
Legend.position = "bottomright",
)
library
###################################################
### chunk number 1:
###################################################
library("Synth")
data("basque")
###################################################
### chunk number 2:
###################################################
basque[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <-
dataprep(foo = basque,
predictors = c("school.illit" , "school.prim" , "school.med" ,
"school.high" , "school.post.high" , "invest") ,
predictors.op = "mean" ,
time.predictors.prior = 1964:1969 ,
special.predictors = list(
list("gdpcap" , 1960:1969 , "mean"),
list("sec.agriculture" ,      seq(1961,1969,2), "mean"),
list("sec.energy" ,           seq(1961,1969,2), "mean"),
list("sec.industry" ,         seq(1961,1969,2), "mean"),
list("sec.construction" ,     seq(1961,1969,2), "mean"),
list("sec.services.venta" ,   seq(1961,1969,2), "mean"),
list("sec.services.nonventa" ,seq(1961,1969,2), "mean"),
list("popdens", 1969, "mean")
),
dependent = "gdpcap",
unit.variable = "regionno",
unit.names.variable = "regionname",
time.variable = "year",
treatment.identifier = 17,
controls.identifier = c(2:16,18),
time.optimize.ssr = 1960:1969,
time.plot = 1955:1997
)
###################################################
### chunk number 4:
###################################################
dataprep.out$X1 #treated unit’s predictor values (Basque Country).
###################################################
### chunk number 5:
###################################################
dataprep.out$Z1 #treated unit’s outcome values (Basque Country).
###################################################
### chunk number 6:
###################################################
dataprep.out$X1["school.high",] <-
dataprep.out$X1["school.high",] + dataprep.out$X1["school.post.high",]
dataprep.out$X1 <-
as.matrix(dataprep.out$X1[-which(rownames(dataprep.out$X1)=="school.post.high"),])
dataprep.out$X0["school.high",] <-
dataprep.out$X0["school.high",] + dataprep.out$X0["school.post.high",]
dataprep.out$X0 <-
dataprep.out$X0[-which(rownames(dataprep.out$X0)=="school.post.high"),]
lowest  <- which(rownames(dataprep.out$X0)=="school.illit")
highest <- which(rownames(dataprep.out$X0)=="school.high")
dataprep.out$X1[lowest:highest,] <-
(100*dataprep.out$X1[lowest:highest,]) /
sum(dataprep.out$X1[lowest:highest,])
dataprep.out$X0[lowest:highest,] <-
100*scale(dataprep.out$X0[lowest:highest,],
center=FALSE,
scale=colSums(dataprep.out$X0[lowest:highest,])
)
###################################################
### chunk number 7:
###################################################
synth.out <- synth(data.prep.obj = dataprep.out,
method = "BFGS")
###################################################
### chunk number 8:
###################################################
gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:3, 1]
###################################################
### chunk number 9:
###################################################
synth.tables <- synth.tab(dataprep.res = dataprep.out,
synth.res = synth.out
)
###################################################
### chunk number 10:
###################################################
names(synth.tables)
###################################################
### chunk number 11:
###################################################
synth.tables$tab.pred[1:5, ]
###################################################
### chunk number 12:
###################################################
synth.tables$tab.w[8:14, ]
###################################################
### chunk number 13:
###################################################
path.plot(synth.res = synth.out,
dataprep.res = dataprep.out,
Ylab = "real per-capita GDP (1986 USD, thousand)",
Xlab = "year",
Ylim = c(0,12),
Legend = c("Basque country","synthetic Basque country"),
Legend.position = "bottomright"
)
###################################################
### chunk number 1:
###################################################
library("Synth")
data("basque")
###################################################
### chunk number 2:
###################################################
basque[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <-
dataprep(foo = basque,
predictors = c("school.illit" , "school.prim" , "school.med" ,
"school.high" , "school.post.high" , "invest") ,
predictors.op = "mean" ,
time.predictors.prior = 1964:1969 ,
special.predictors = list(
list("gdpcap" , 1960:1969 , "mean"),
list("sec.agriculture" ,      seq(1961,1969,2), "mean"),
list("sec.energy" ,           seq(1961,1969,2), "mean"),
list("sec.industry" ,         seq(1961,1969,2), "mean"),
list("sec.construction" ,     seq(1961,1969,2), "mean"),
list("sec.services.venta" ,   seq(1961,1969,2), "mean"),
list("sec.services.nonventa" ,seq(1961,1969,2), "mean"),
list("popdens", 1969, "mean")
),
dependent = "gdpcap",
unit.variable = "regionno",
unit.names.variable = "regionname",
time.variable = "year",
treatment.identifier = 17,
controls.identifier = c(2:16,18),
time.optimize.ssr = 1960:1969,
time.plot = 1955:1997
)
###################################################
### chunk number 4:
###################################################
dataprep.out$X1 #treated unit’s predictor values (Basque Country).
###################################################
### chunk number 5:
###################################################
dataprep.out$Z1 #treated unit’s outcome values (Basque Country).
###################################################
### chunk number 6:
###################################################
dataprep.out$X1["school.high",] <-
dataprep.out$X1["school.high",] + dataprep.out$X1["school.post.high",]
dataprep.out$X1 <-
as.matrix(dataprep.out$X1[-which(rownames(dataprep.out$X1)=="school.post.high"),])
dataprep.out$X0["school.high",] <-
dataprep.out$X0["school.high",] + dataprep.out$X0["school.post.high",]
dataprep.out$X0 <-
dataprep.out$X0[-which(rownames(dataprep.out$X0)=="school.post.high"),]
lowest  <- which(rownames(dataprep.out$X0)=="school.illit")
highest <- which(rownames(dataprep.out$X0)=="school.high")
dataprep.out$X1[lowest:highest,] <-
(100*dataprep.out$X1[lowest:highest,]) /
sum(dataprep.out$X1[lowest:highest,])
dataprep.out$X0[lowest:highest,] <-
100*scale(dataprep.out$X0[lowest:highest,],
center=FALSE,
scale=colSums(dataprep.out$X0[lowest:highest,])
)
###################################################
### chunk number 7:
###################################################
synth.out <- syn I feel well bro you know I'm leaving she's leaving sort yeah really really it's fine I think it's better to break heart don't like do something you're not yeah it's tricky who are you afraid of the lesbians are gonna go against I don't know you don't have to I think as long as don't assume that she's not OK with you you know I will be yeah I just want to mess around like then she decides I don't know if this is toxic need to let me know having a great timeYou need to let me know becomes more because it's not gonna be like this for me and he was like and I really don't want you to get hurt in the process for us to like not be friends anymore because of this and I was like whatever and then it yeah catching feelings so I was really sad OK we talk to each other we still friendsth(data.prep.obj = dataprep.out,
###################################################
### chunk number 8:
###################################################
gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
###################################################
### chunk number 7:
###################################################
# run synth
synth.out <- synth(
data.prep.obj = dataprep.out,
method = "BFGS"
)
###################################################
### chunk number 8:
###################################################
gaps <- dataprep.out$Y1plot - (dataprep.out$Y0plot %*% synth.out$solution.w)
gaps[1:3, 1]
###################################################
### chunk number 9:
###################################################
synth.tables <- synth.tab(dataprep.res = dataprep.out,
synth.res = synth.out
)
###################################################
### chunk number 10:
###################################################
names(synth.tables)
###################################################
### chunk number 11:
###################################################
synth.tables$tab.pred[1:5, ]
###################################################
### chunk number 12:
###################################################
synth.tables$tab.w[8:14, ]
###################################################
### chunk number 13:
###################################################
path.plot(synth.res = synth.out,
dataprep.res = dataprep.out,
Ylab = "real per-capita GDP (1986 USD, thousand)",
Xlab = "year",
Ylim = c(0,12),
Legend = c("Basque country","synthetic Basque country"),
Legend.position = "bottomright"
)
###################################################
### chunk number 1:
###################################################
library("Synth")
library(readr)
df <- read_csv("merged_dataset.csv")
###################################################
### chunk number 2:
###################################################
df[85:89, 1:4]
df %>%
df %>% View()
library(tidyverse)
library(dplyr)
install.packages('dplyr')
library('dplyr')
df %>% View()
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
###################################################
### chunk number 1:
###################################################
library("Synth")
library(readr)
library('dplyr')
df <- read_csv("merged_dataset.csv")
###################################################
### chunk number 2:
###################################################
df[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
id_cols <- c("boycotted", "ticker", "fy", "fp", "end")
# Step 2: Convert all other columns to numeric
df_clean <- df %>%
mutate(across(
.cols = -all_of(id_cols),          # all columns except identifiers
.fns  = ~ suppressWarnings(as.numeric(.))  # convert to numeric, quietly
))
###################################################
### chunk number 2:
###################################################
df[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
###################################################
### chunk number 2:
###################################################
df_clean[85:89, 1:4]
# Step 2: Convert all other columns to numeric
df_clean <- df %>%
mutate(across(
.cols = -all_of(id_cols),          # all columns except identifiers
.fns  = ~ suppressWarnings(as.numeric(.))  # convert to numeric, quietly
))
###################################################
### chunk number 2:
###################################################
df_clean[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
# Step 2: Convert all other columns to numeric
df_clean <- df %>%
mutate(across(
.cols = -all_of(id_cols),          # all columns except identifiers
.fns  = ~ as.numeric(.)  # convert to numeric, quietly
))
df_clean
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
###################################################
### chunk number 1:
###################################################
library("Synth")
library(readr)
library('dplyr')
df <- read_csv("merged_dataset.csv")
id_cols <- c("boycotted", "ticker", "fy", "fp", "end")
# Step 2: Convert all other columns to numeric
df_clean <- df %>%
mutate(across(
.cols = -all_of(id_cols),          # all columns except identifiers
.fns  = ~ as.numeric(.)  # convert to numeric, quietly
))
###################################################
### chunk number 2:
###################################################
df_clean[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "company_id",
unit.names.variable = "ticker",
time.variable = "year",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "ticker",
time.variable = "fy",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
df <- df_clean %>%
mutate(company_id = as.numeric(as.factor(ticker)))  # creates 1, 2, 3, ...
###################################################
### chunk number 2:
###################################################
df_clean[85:89, 1:4]
###################################################
### chunk number 3:
###################################################
dataprep.out <- dataprep(
foo = df_clean,
predictors = c("assets", "employees", "gross_margin_pct", "net_margin_pct",
"r_and_d", "long_term_debt", "operating_expenses"),
predictors.op = "mean",
time.predictors.prior = 2021:2023,  # pre-boycott quarters
special.predictors = list(
list("revenue", 2021:2020, "mean"),   # Include mean past revenue
list("net_income", 2021:2020, "mean")
),
dependent = "revenue",
unit.variable = "ticker",
time.variable = "fy",
treatment.identifier = 1,         # Boycotted company
controls.identifier = c(2:20),    # Non-boycotted companies
time.optimize.ssr = 2021:2020,
time.plot = 2021:2025
)
